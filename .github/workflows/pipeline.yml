name: SDyPP-grupo4-tp-integrador

env:
  ACTIONS_STEP_DEBUG: true

on:
  push:
    branches:
      - main
jobs:
  deploy-infra:
    if: "!contains(github.event.head_commit.message, 'delete') && !contains(github.event.head_commit.message, 'pause')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.6

      - name: Setup Google Cloud
        uses: ./.github/actions/gcloud-credentials
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Check and Create GCS Bucket
        env:
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
        run: |
          gcloud config set project $PROJECT_ID
          BUCKET_URI="gs://${BUCKET_NAME}/"
          if gsutil ls -p $PROJECT_ID | grep -q $BUCKET_URI; then
            echo "Bucket $BUCKET_NAME already exists."
          else
            echo "Creating bucket $BUCKET_NAME..."
            gsutil mb -p $PROJECT_ID $BUCKET_URI
          fi

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Terraform Initialize
        run: |
          terraform init --reconfigure \
            -backend-config="bucket=${{ secrets.BUCKET_NAME }}" \
            -backend-config="prefix=terraform/state"
        working-directory: TP-Integrador/terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: TP-Integrador/terraform

      - name: Terraform Apply
        run: terraform apply -lock=false -auto-approve tfplan
        working-directory: TP-Integrador/terraform

  install-argo:
    needs: deploy-infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.6

      - name: GCP authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: GCP kubectl plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
            version: '>= 363.0.0'
            install_components: 'kubectl'

      - name: Get Kubernetes Credentials
        run: |
          gcloud container clusters get-credentials primary --zone "us-east1-d" --project ${{ secrets.PROJECT_ID }}

      # - name: Apply RBAC Configuration
      #   run: kubectl apply -f TP-Integrador/manifests/role-binding.yaml

      - name: Apply RBAC Configuration
        run: gcloud projects add-iam-policy-binding ${{ secrets.PROJECT_ID }} \
          --member "serviceAccount:${{ secrets.SERVICE_ACCOUNT_EMAIL }}" \
          --role "roles/container.clusterAdmin"

      - name: Install ArgoCD
        run: |
          kubectl create namespace argocd || echo "Namespace already exists"
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

  install-ingress:
    needs: deploy-infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.6

      - name: GCP authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: GCP kubectl plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
            version: '>= 363.0.0'
            install_components: 'kubectl'

      - name: Get Kubernetes Credentials
        run: |
          gcloud container clusters get-credentials primary --zone "us-east1-d" --project ${{ secrets.PROJECT_ID }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Add Traefik Helm Repository
        run: |
          helm repo add traefik https://traefik.github.io/charts
          helm repo update

      - name: Deploy Traefik
        run: |
          helm upgrade --install traefik traefik/traefik \
            --namespace traefik \
            --create-namespace \
            -f TP-Integrador/traefik/traefik-values.yaml

      - name: Reserve Static IP for Traefik
        run: |
          gcloud compute addresses create traefik-ip --region us-east1
          TRAEFIK_IP=$(gcloud compute addresses describe traefik-ip --region us-east1 --format='get(address)')
          kubectl patch svc traefik -n traefik -p "{\"spec\": {\"loadBalancerIP\": \"$TRAEFIK_IP\"}}"

      - name: Save Traefik IP for future usage
        run: |
          TRAEFIK_IP=$(gcloud compute addresses describe traefik-ip --region us-east1 --format='get(address)')
          echo "TRAEFIK_IP=$TRAEFIK_IP" >> $GITHUB_ENV

  deploy-services-and-apps:
    needs: [deploy-infra, install-ingress, install-argo]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.6

      - name: Setup Google Cloud
        uses: ./.github/actions/gcloud-credentials
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Get Kubernetes Credentials
        run: |
          gcloud container clusters get-credentials primary --zone "us-east1-d" --project ${{ secrets.PROJECT_ID }}

      - name: Deploy ArgoCD Applications
        run: |
          kubectl apply -f TP-Integrador/argocd-applications.yaml

  delete-infra:
    if: contains(github.event.head_commit.message, 'delete')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.6

      - name: Setup Google Cloud
        uses: ./.github/actions/gcloud-credentials
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Terraform Initialize
        run: |
          terraform init --reconfigure \
            -backend-config="bucket=${{ secrets.BUCKET_NAME }}" \
            -backend-config="prefix=terraform/state"
        working-directory: TP-Integrador/terraform

      - name: Terraform Destroy
        run: |
          terraform destroy -lock=false -auto-approve
        working-directory: TP-Integrador/terraform

  pause-infra:
    if: contains(github.event.head_commit.message, 'pause')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.6

      - name: Setup Google Cloud
        uses: ./.github/actions/gcloud-credentials
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Get Kubernetes Credentials
        run: |
          gcloud container clusters get-credentials primary --zone "us-east1-d" --project ${{ secrets.PROJECT_ID }}

      - name: Scale Down Redis Deployment
        run: |
          kubectl scale deployment redis --replicas=0 -n services

      - name: Scale Down RabbitMQ Deployment
        run: |
          kubectl scale deployment rabbitmq --replicas=0 -n services